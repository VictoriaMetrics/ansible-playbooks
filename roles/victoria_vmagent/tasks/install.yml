---
- name: Create VMagent system group
  group:
    name: "{{ vmagent_system_group }}"
    state: present
    system: true
  when: vmagent_system_group != "root"

- name: Create VMagent system user
  user:
    name: "{{ vmagent_system_user }}"
    groups: "{{ vmagent_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
  when: vmagent_system_user != "root"

- name: Ensure existense of /usr/local/bin
  file:
    path: /usr/local/bin
    state: directory
    mode: 0755

- name: Delete existing VMagent version if it's different.
  file:
    path: /usr/local/bin/vmagent-prod
    state: absent
  when:
  - vmagent_is_installed.stat.exists | bool
  - vmagent_version not in vmagent_current_version.stdout

- block:
  - name: Download and unarchive VMagent release binary
    environment:
      http_proxy: "{{ vm_proxy_http }}"
      https_proxy: "{{ vm_proxy_https }}"
    unarchive:
      src: "{{ vmagent_download_url }}"
      dest: /tmp
      remote_src: yes
    delegate_to: localhost
    become: no
    when:
      - not ansible_check_mode
      - not vmagent_is_installed.stat.exists or
        vmagent_version not in vmagent_current_version.stdout

  - name: Copy vmagent binary to target host
    notify: Restart VMagent service
    copy:
      src: /tmp/vmagent-prod
      dest: /tmp/vmagent-prod
      mode: 0751
      owner: "{{ vmagent_system_user }}"
      group: "{{ vmagent_system_group }}"
    when:
      - not ansible_check_mode
      - not vmagent_is_installed.stat.exists or
        vmagent_version not in vmagent_current_version.stdout
  
  - name: Replace vmagent binary at target dir
    notify: Restart VMagent service
    shell: |
      mv /tmp/vmagent-prod /usr/local/bin/vmagent-prod
    when:
      - not ansible_check_mode
      - not vmagent_is_installed.stat.exists or
        vmagent_version not in vmagent_current_version.stdout
  when: vmagent_install_download_to_control

- block:
  - name: Download and unarchive VMagent release binary
    environment:
      http_proxy: "{{ vm_proxy_http }}"
      https_proxy: "{{ vm_proxy_https }}"
    unarchive:
      src: "{{ vmagent_download_url }}"
      dest: /tmp
      remote_src: yes
    when:
      - not ansible_check_mode
      - not vmagent_is_installed.stat.exists or
        vmagent_version not in vmagent_current_version.stdout

  - name: Replace vmagent binary at target dir
    notify: Restart VMagent service
    shell: |
      mv /tmp/vmagent-prod /usr/local/bin/vmagent-prod
      chmod 0751 /usr/local/bin/vmagent-prod
      chown {{ vmagent_system_user }}:{{ vmagent_system_group }} /usr/local/bin/vmagent-prod
    when:
      - not ansible_check_mode
      - not vmagent_is_installed.stat.exists or
        vmagent_version not in vmagent_current_version.stdout
  when: not vmagent_install_download_to_control
